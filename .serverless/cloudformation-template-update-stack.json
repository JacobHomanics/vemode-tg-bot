{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "SendMessageLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-node-telegram-echo-bot-dev-sendMessage"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "aws-node-telegram-echo-bot",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-node-telegram-echo-bot-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-node-telegram-echo-bot-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "aws-node-telegram-echo-bot",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "SendMessageLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-43fe1c52-760d",
          "S3Key": "serverless/aws-node-telegram-echo-bot/dev/1730146803318-2024-10-28T20:20:03.318Z/aws-node-telegram-echo-bot.zip"
        },
        "Handler": "handler.sendMessage",
        "Runtime": "nodejs18.x",
        "FunctionName": "aws-node-telegram-echo-bot-dev-sendMessage",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SendMessageLogGroup"
      ]
    },
    "SendMessageLambdaVersionLz0kx1VKs1s56P44Di4u36uIpBtbABzK5ChkaKVQAE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SendMessageLambdaFunction"
        },
        "CodeSha256": "7elrtalE4TrKfq8DodPzaXmKy0RWgmjMzlToskKb0V0="
      }
    },
    "SendMessageEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "SendMessageLambdaFunction",
                "Arn"
              ]
            },
            "Id": "sendMessageSchedule"
          }
        ]
      }
    },
    "SendMessageLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SendMessageLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "SendMessageEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-us-east-1-43fe1c52-760d",
      "Export": {
        "Name": "sls-aws-node-telegram-echo-bot-dev-ServerlessDeploymentBucketName"
      }
    },
    "SendMessageLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SendMessageLambdaVersionLz0kx1VKs1s56P44Di4u36uIpBtbABzK5ChkaKVQAE"
      },
      "Export": {
        "Name": "sls-aws-node-telegram-echo-bot-dev-SendMessageLambdaFunctionQualifiedArn"
      }
    }
  }
}